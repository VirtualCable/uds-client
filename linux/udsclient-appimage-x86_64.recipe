version: 1
script:
  # Remove any previous build
  - rm -rf $TARGET_APPDIR | true
  # Make usr and icons dirs
  - mkdir -p $TARGET_APPDIR/usr/src
  # Copy the python application code into the UDSClientDir
  - cp ../src/UDS*.py $TARGET_APPDIR/usr/src
  - cp -r ../src/uds $TARGET_APPDIR/usr/src
  # Remove __pycache__ and .mypy if exists
  - rm $TARGET_APPDIR/usr/src/.mypy_cache -rf 2>&1 > /dev/null
  - rm $TARGET_APPDIR/usr/src/uds/.mypy_cache -rf 2>&1 > /dev/null
  - rm $TARGET_APPDIR/usr/src/__pycache__ -rf 2>&1 > /dev/null
  - rm $TARGET_APPDIR/usr/src/uds/__pycache__ -rf 2>&1 > /dev/null
AppDir:
  # On /tmp, that is an ext4 filesystem. On btrfs squashfs complains with "Unrecognised xattr prefix btrfs.compression"
  path: /tmp/UDSClientDir

  app_info:
    id: com.udsenterprise.UDSClient3
    name: UDSClient
    icon: utilities-terminal
    version: 0.0.0
    # Set the python executable as entry point
    exec: usr/bin/python3
    # Set the application main script path as argument. Use '$@' to forward CLI parameters
    exec_args: '$APPDIR/usr/src/UDSClient.py $@'

  apt:
    arch: amd64
    sources:
      - sourceline: 'deb [arch=amd64] http://ftp.nl.debian.org/debian/ trixie main contrib non-free'
        key_url: 'https://ftp-master.debian.org/keys/archive-key-11.asc'
      # - sourceline: 'deb [arch=amd64] https://packages.x2go.org/debian bookworm extras main'
      #   key_url: 'https://images.udsenterprise.com/files/x2go.key'

    include:
      - python3
      - python3-pkg-resources
      - python3-pyqt5
      - python3-cryptography
      - python3-certifi
      - python3-psutil
      - freerdp3-x11
      - freerdp3-wayland
      # - x2goclient
      - libqt5gui5t64
      - openssh-sftp-server
    exclude: []

  runtime:
    env:
      # Set python home
      # See https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME
      PYTHONHOME: '${APPDIR}/usr'
      # Path to the site-packages dir or other modules dirs
      # See https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH
      PYTHONPATH: '${APPDIR}/usr/lib/python3.9/site-packages'
      # Allow to use the system's libssl without legacy algorithms
      CRYPTOGRAPHY_OPENSSL_NO_LEGACY: 1

  after_runtime: |
    set -eu
    # Substitute the x2gclient on usr/bin with the one on libexec
    x2go_bin="${TARGET_APPDIR}/usr/bin/x2goclient"
    x2go_libexec="${TARGET_APPDIR}/usr/libexec/x2goclient"
    if [ -e "${x2go_libexec}" ] && [ -e "${x2go_bin}" ]; then
      mv "${x2go_bin}" "${x2go_bin}.bak"
      ln -s "../libexec/x2goclient" "${x2go_bin}"
    fi

    # python3 is linked against 'lib64/ld-linux-x86-64.so.2' but 'compat/lib64' is missing
    compat="${TARGET_APPDIR}/runtime/compat"
    if [ ! -e "${compat}/lib64" ] && [ -d "${compat}/usr/lib64" ]; then
      ln -s "usr/lib64" "${compat}/"
    fi
    if [ ! -e "${compat}/lib" ] && [ -d "${compat}/usr/lib" ]; then
      ln -s "usr/lib" "${compat}/"
    fi
    # For aarch64, the path is 'lib/aarch64-linux-gnu"
    if [ ! -e "${compat}/lib/aarch64-linux-gnu" ] && [ -d "${compat}/usr/lib/aarch64-linux-gnu" ]; then
      # Ensure 'lib' is a symlink to 'usr/lib
      ln -s "usr/lib" "${compat}/"
    fi
    usr_bin="${TARGET_APPDIR}/usr/bin"
    # create symlink for xfreerdp
    if [ ! -e "${usr_bin}/xfreerdp" ] && [ -e "${usr_bin}/xfreerdp3" ]; then
      ln -s "xfreerdp3" "${usr_bin}/xfreerdp"
    fi

AppImage:
  # update-information: None
  sign-key: 592AF43A64B8559137FA2458AA4ECFEE784E6BA7
  arch: x86_64
  # comp: xz
